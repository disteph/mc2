(set-logic QF_LRA)

;; Declare the neuron variables
(declare-fun n_0_0 () Real)
(declare-fun n_1_0 () Real)
(declare-fun n_1_1 () Real)
(declare-fun n_1_2 () Real)
(declare-fun n_1_3 () Real)
(declare-fun n_1_4 () Real)
(declare-fun n_1_5 () Real)
(declare-fun n_1_6 () Real)
(declare-fun n_1_7 () Real)
(declare-fun n_1_8 () Real)
(declare-fun n_1_9 () Real)
(declare-fun n_1_10 () Real)
(declare-fun n_1_11 () Real)
(declare-fun n_1_12 () Real)
(declare-fun n_1_13 () Real)
(declare-fun n_1_14 () Real)
(declare-fun n_1_15 () Real)
(declare-fun n_2_0 () Real)
(declare-fun n_2_1 () Real)
(declare-fun n_2_2 () Real)
(declare-fun n_2_3 () Real)
(declare-fun n_2_4 () Real)
(declare-fun n_2_5 () Real)
(declare-fun n_2_6 () Real)
(declare-fun n_2_7 () Real)
(declare-fun n_2_8 () Real)
(declare-fun n_2_9 () Real)
(declare-fun n_2_10 () Real)
(declare-fun n_2_11 () Real)
(declare-fun n_2_12 () Real)
(declare-fun n_2_13 () Real)
(declare-fun n_2_14 () Real)
(declare-fun n_2_15 () Real)
(declare-fun n_3_0 () Real)

;; Bound input ranges

(assert (>= n_0_0 0))
(assert (<= n_0_0 1))

;; Declare the transition rules between neurons

;; Layer 1
(assert (let ((ws (+ (* n_0_0 3.445375) (- 6.526563)))) (relu ws n_1_0)))
(assert (let ((ws (+ (* n_0_0 (- 0.550861)) 0.061663))) (relu ws n_1_1)))
(assert (let ((ws (+ (* n_0_0 0.268459) (- 0.459841)))) (relu ws n_1_2)))
(assert (let ((ws (+ (* n_0_0 (- 0.516193)) (- 0.470316)))) (relu ws n_1_3)))
(assert (let ((ws (+ (* n_0_0 0.084150) (- 0.578679)))) (relu ws n_1_4)))
(assert (let ((ws (+ (* n_0_0 8.719917) 7.053446))) (relu ws n_1_5)))
(assert (let ((ws (+ (* n_0_0 23.859421) (- 7.732572)))) (relu ws n_1_6)))
(assert (let ((ws (+ (* n_0_0 (- 0.514385)) (- 0.141745)))) (relu ws n_1_7)))
(assert (let ((ws (+ (* n_0_0 (- 0.455240)) (- 0.415262)))) (relu ws n_1_8)))
(assert (let ((ws (+ (* n_0_0 (- 3.431959)) 1.112238))) (relu ws n_1_9)))
(assert (let ((ws (+ (* n_0_0 (- 19.449217)) (- 21.769655)))) (relu ws n_1_10)))
(assert (let ((ws (+ (* n_0_0 0.059902) (- 0.066796)))) (relu ws n_1_11)))
(assert (let ((ws (+ (* n_0_0 0.066744) (- 0.154636)))) (relu ws n_1_12)))
(assert (let ((ws (+ (* n_0_0 (- 0.060876)) (- 0.257097)))) (relu ws n_1_13)))
(assert (let ((ws (+ (* n_0_0 5.635678) 9.156091))) (relu ws n_1_14)))
(assert (let ((ws (+ (* n_0_0 (- 0.191687)) 7.665158))) (relu ws n_1_15)))
;; Layer 2
(assert (let ((ws (+ (* n_1_0 0.115440) (* n_1_1 0.064608) (* n_1_2 0.004741) (* n_1_3 (- 0.281252)) (* n_1_4 (- 0.105853)) (* n_1_5 (- 0.264898)) (* n_1_6 (- 0.286745)) (* n_1_7 (- 0.099058)) (* n_1_8 (- 0.128541)) (* n_1_9 0.021502) (* n_1_10 (- 0.066092)) (* n_1_11 (- 0.355381)) (* n_1_12 (- 0.214781)) (* n_1_13 0.298928) (* n_1_14 0.143704) (* n_1_15 (- 0.053229)) (- 0.309629)))) (relu ws n_2_0)))
(assert (let ((ws (+ (* n_1_0 (- 1.541521)) (* n_1_1 0.313347) (* n_1_2 0.001069) (* n_1_3 0.273673) (* n_1_4 (- 0.123774)) (* n_1_5 (- 5.345321)) (* n_1_6 0.613756) (* n_1_7 (- 0.077467)) (* n_1_8 (- 0.033460)) (* n_1_9 (- 7.398970)) (* n_1_10 0.943617) (* n_1_11 (- 0.092346)) (* n_1_12 (- 0.030653)) (* n_1_13 0.103128) (* n_1_14 (- 2.109807)) (* n_1_15 (- 6.549206)) (- 9.638359)))) (relu ws n_2_1)))
(assert (let ((ws (+ (* n_1_0 0.246810) (* n_1_1 (- 0.194633)) (* n_1_2 0.255874) (* n_1_3 (- 0.009476)) (* n_1_4 0.228908) (* n_1_5 0.542284) (* n_1_6 11.364268) (* n_1_7 (- 0.156971)) (* n_1_8 (- 0.147494)) (* n_1_9 0.584040) (* n_1_10 1.832372) (* n_1_11 (- 0.226498)) (* n_1_12 (- 0.187905)) (* n_1_13 0.033795) (* n_1_14 (- 0.282672)) (* n_1_15 1.664441) 0.676014))) (relu ws n_2_2)))
(assert (let ((ws (+ (* n_1_0 0.260310) (* n_1_1 0.136611) (* n_1_2 0.150896) (* n_1_3 0.050351) (* n_1_4 (- 0.336329)) (* n_1_5 (- 0.305229)) (* n_1_6 (- 0.229692)) (* n_1_7 0.117976) (* n_1_8 (- 0.347043)) (* n_1_9 0.122522) (* n_1_10 (- 0.156047)) (* n_1_11 0.353653) (* n_1_12 0.285753) (* n_1_13 0.205198) (* n_1_14 (- 0.101513)) (* n_1_15 0.194341) (- 0.183601)))) (relu ws n_2_3)))
(assert (let ((ws (+ (* n_1_0 (- 0.933659)) (* n_1_1 0.361020) (* n_1_2 0.194564) (* n_1_3 (- 0.290518)) (* n_1_4 0.043259) (* n_1_5 (- 0.965126)) (* n_1_6 0.269364) (* n_1_7 (- 0.029735)) (* n_1_8 (- 0.257881)) (* n_1_9 (- 6.748023)) (* n_1_10 (- 6.117433)) (* n_1_11 (- 0.313840)) (* n_1_12 0.215440) (* n_1_13 (- 0.308555)) (* n_1_14 (- 3.363454)) (* n_1_15 (- 2.178173)) (- 14.503938)))) (relu ws n_2_4)))
(assert (let ((ws (+ (* n_1_0 (- 0.356767)) (* n_1_1 0.348750) (* n_1_2 0.297724) (* n_1_3 (- 0.278857)) (* n_1_4 0.338442) (* n_1_5 (- 0.527489)) (* n_1_6 (- 0.065405)) (* n_1_7 (- 0.176914)) (* n_1_8 (- 0.110963)) (* n_1_9 (- 0.291537)) (* n_1_10 0.272409) (* n_1_11 (- 0.282931)) (* n_1_12 0.185338) (* n_1_13 0.031139) (* n_1_14 (- 0.342232)) (* n_1_15 (- 0.704523)) (- 1.026964)))) (relu ws n_2_5)))
(assert (let ((ws (+ (* n_1_0 0.289428) (* n_1_1 (- 0.299898)) (* n_1_2 0.300898) (* n_1_3 0.269280) (* n_1_4 0.232480) (* n_1_5 3.820832) (* n_1_6 2.145932) (* n_1_7 0.127488) (* n_1_8 (- 0.186630)) (* n_1_9 (- 2.760907)) (* n_1_10 0.588472) (* n_1_11 (- 0.340484)) (* n_1_12 0.304638) (* n_1_13 0.190631) (* n_1_14 1.192783) (* n_1_15 (- 2.084267)) (- 3.865870)))) (relu ws n_2_6)))
(assert (let ((ws (+ (* n_1_0 0.667856) (* n_1_1 0.369126) (* n_1_2 0.376897) (* n_1_3 0.210863) (* n_1_4 0.054089) (* n_1_5 2.603189) (* n_1_6 (- 0.290837)) (* n_1_7 (- 0.303039)) (* n_1_8 0.128769) (* n_1_9 0.953473) (* n_1_10 0.309098) (* n_1_11 0.256669) (* n_1_12 0.032744) (* n_1_13 (- 0.165104)) (* n_1_14 0.265095) (* n_1_15 1.053685) 1.157592))) (relu ws n_2_7)))
(assert (let ((ws (+ (* n_1_0 (- 0.018715)) (* n_1_1 0.097127) (* n_1_2 0.150680) (* n_1_3 0.125338) (* n_1_4 0.350114) (* n_1_5 2.564746) (* n_1_6 (- 0.619978)) (* n_1_7 (- 0.177420)) (* n_1_8 (- 0.195185)) (* n_1_9 (- 0.254623)) (* n_1_10 (- 0.264691)) (* n_1_11 (- 0.109807)) (* n_1_12 (- 0.369383)) (* n_1_13 0.101495) (* n_1_14 0.808176) (* n_1_15 0.155745) (- 1.224845)))) (relu ws n_2_8)))
(assert (let ((ws (+ (* n_1_0 (- 0.309586)) (* n_1_1 0.306383) (* n_1_2 (- 0.071017)) (* n_1_3 (- 0.013153)) (* n_1_4 0.128258) (* n_1_5 (- 0.374653)) (* n_1_6 (- 0.242029)) (* n_1_7 (- 0.226065)) (* n_1_8 0.075292) (* n_1_9 (- 0.244919)) (* n_1_10 0.203342) (* n_1_11 0.337245) (* n_1_12 (- 0.013249)) (* n_1_13 0.277494) (* n_1_14 0.326951) (* n_1_15 (- 0.064636)) (- 0.180758)))) (relu ws n_2_9)))
(assert (let ((ws (+ (* n_1_0 (- 1.431111)) (* n_1_1 (- 0.033637)) (* n_1_2 (- 0.178341)) (* n_1_3 (- 0.271275)) (* n_1_4 (- 0.229201)) (* n_1_5 (- 4.212106)) (* n_1_6 (- 2.113076)) (* n_1_7 (- 0.197663)) (* n_1_8 0.049854) (* n_1_9 (- 5.642176)) (* n_1_10 0.145325) (* n_1_11 (- 0.359971)) (* n_1_12 0.121520) (* n_1_13 0.082813) (* n_1_14 (- 1.772471)) (* n_1_15 (- 4.802023)) (- 8.250572)))) (relu ws n_2_10)))
(assert (let ((ws (+ (* n_1_0 (- 0.026218)) (* n_1_1 0.114203) (* n_1_2 (- 0.316514)) (* n_1_3 0.068072) (* n_1_4 0.008865) (* n_1_5 0.047602) (* n_1_6 0.258967) (* n_1_7 0.227862) (* n_1_8 0.184929) (* n_1_9 (- 0.989886)) (* n_1_10 (- 0.163736)) (* n_1_11 0.129926) (* n_1_12 (- 0.041943)) (* n_1_13 (- 0.104618)) (* n_1_14 0.296264) (* n_1_15 (- 0.999776)) (- 1.096872)))) (relu ws n_2_11)))
(assert (let ((ws (+ (* n_1_0 0.942412) (* n_1_1 (- 0.644419)) (* n_1_2 (- 0.310321)) (* n_1_3 (- 0.262060)) (* n_1_4 (- 0.006752)) (* n_1_5 (- 1.142089)) (* n_1_6 57.129485) (* n_1_7 0.323918) (* n_1_8 (- 0.017936)) (* n_1_9 3.768171) (* n_1_10 8.407061) (* n_1_11 (- 0.222838)) (* n_1_12 (- 0.157673)) (* n_1_13 0.188837) (* n_1_14 (- 1.198205)) (* n_1_15 7.214766) 4.705150))) (relu ws n_2_12)))
(assert (let ((ws (+ (* n_1_0 0.399264) (* n_1_1 (- 0.360507)) (* n_1_2 (- 0.055027)) (* n_1_3 0.277958) (* n_1_4 0.079983) (* n_1_5 (- 1.296585)) (* n_1_6 27.195619) (* n_1_7 0.089415) (* n_1_8 (- 0.227430)) (* n_1_9 2.387584) (* n_1_10 4.065825) (* n_1_11 (- 0.339440)) (* n_1_12 (- 0.318070)) (* n_1_13 (- 0.221566)) (* n_1_14 (- 0.823801)) (* n_1_15 4.016374) 2.970773))) (relu ws n_2_13)))
(assert (let ((ws (+ (* n_1_0 0.281270) (* n_1_1 (- 0.002366)) (* n_1_2 0.041642) (* n_1_3 0.332492) (* n_1_4 (- 0.244077)) (* n_1_5 (- 0.330304)) (* n_1_6 0.199581) (* n_1_7 (- 0.074612)) (* n_1_8 (- 0.153931)) (* n_1_9 (- 0.200793)) (* n_1_10 0.062575) (* n_1_11 (- 0.145036)) (* n_1_12 (- 0.368826)) (* n_1_13 (- 0.051257)) (* n_1_14 0.107983) (* n_1_15 0.119822) 0.004937))) (relu ws n_2_14)))
(assert (let ((ws (+ (* n_1_0 0.172542) (* n_1_1 (- 0.164969)) (* n_1_2 (- 0.275850)) (* n_1_3 (- 0.317715)) (* n_1_4 (- 0.114007)) (* n_1_5 (- 0.227042)) (* n_1_6 (- 0.277256)) (* n_1_7 (- 0.358676)) (* n_1_8 (- 0.267521)) (* n_1_9 0.167922) (* n_1_10 (- 0.067881)) (* n_1_11 (- 0.254683)) (* n_1_12 (- 0.141008)) (* n_1_13 0.093862) (* n_1_14 (- 0.079018)) (* n_1_15 (- 0.343757)) (- 0.221930)))) (relu ws n_2_15)))
;; Layer 3
(assert (let ((ws (+ (* n_2_0 (- 0.403297)) (* n_2_1 15.021132) (* n_2_2 (- 0.873498)) (* n_2_3 0.434798) (* n_2_4 (- 0.475020)) (* n_2_5 (- 0.280156)) (* n_2_6 (- 11.603073)) (* n_2_7 (- 0.872576)) (* n_2_8 (- 2.310001)) (* n_2_9 0.130678) (* n_2_10 (- 0.152464)) (* n_2_11 (- 1.051453)) (* n_2_12 11.036530) (* n_2_13 8.104893) (* n_2_14 0.318152) (* n_2_15 (- 0.428451)) 0.778292))) (= n_3_0 ws)))

;; Goal

(assert (> n_3_0 0))
(assert (< n_3_0 1))

(check-sat)

